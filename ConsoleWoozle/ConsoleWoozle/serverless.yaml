AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application that uses the ASP.NET CORE framewaork running in Amazon Lambda.
Parameters:
  LambdaName:
    Type: String
    Description: Name of the lambda function
    MinLength: '0'
    Default: BuildSolution
  EnvironmentPrefix:
    Type: String
    Description: Prefix of the environment
    MinLength: '0'
    Default: Woozle-
  BucketName:
    Type: String
    Description: S3 Bucket name
    MinLength: '0'
    Default: s3-woozle

Resources:
  WoozleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - s3.amazonaws.com
              Action:
                - 'sts:AssumeRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              -
                Action:
                  - lambda:InvokeFunction
                  - lambda:GetEventSourceMapping
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                Effect: Allow
                Resource:
                  - {"Fn::Join": ["", ["arn:aws:lambda:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":lambda-", {"Ref": "EnvironmentPrefix"}, {"Ref": "LambdaName"}, "*"]]}
                  - {"Fn::Join": ["", ["arn:aws:lambda:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":functionlambda-", {"Ref": "EnvironmentPrefix"}, {"Ref": "LambdaName"}, "*"]]}
              -
                Action:
                  - secretsmanager:ListSecrest
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - secretsmanager:ListSecretVersionIds
                Effect: Allow
                Resource:
                  - {"Fn::Join": ["", ["arn:aws:secretsmanager:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":secret:secret:SpotifyCredentials", "*"]]}
              -
                Action:
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                Effect: Allow
                Resource: 'arn:aws:logs:*:*:log-group:/aws/lambda-insights:*'
              -
                Action:
                  - kms:Decrypt
                Effect: Allow
                Resource: "*"
              -
                Action:
                  - s3:ListBucket
                  - s3:GetObjectVersionAcl
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:PutObject
                  - s3:DeleteObject
                Effect: Allow
                Resource:
                  - {"Fn::Join": ["", ["arn:aws:s3:::", "woozle"]]}
                  - {"Fn::Join": ["", ["arn:aws:s3:::", "woozle/*"]]}
      Description: "Role for Woozle"
      RoleName: WoozleRole

  CreateFileFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: {"Fn::Join": ["", {"Ref": "EnvironmentPrefix"},{"Ref": "LambdaName"}]}
      Handler: ConsoleWoozle::ConsoleWoozle.Functions::BuildSolution
      Runtime: net6.0
      CodeUri: ''
      ProvisionedConcurrencyConfig:
        ProvisionedConcurrentExecutions: 2
      MemorySize: 1024
      Timeout: 30
      Role:
        {"Fn::GetAtt" : ["WoozleRole", "Arn"]}

  WoozleBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketName: 
        - Ref: BucketName
      AccessControl: Private

  RestrictPutToSecureTransport:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WoozleBucket
      PolicyDocument:
        Statement:
          -
            Sid: "RestrictPutToSecureTransport"
            Action:
              - "s3:PutObject"
            Effect: "Deny"
            Resource: 
              Fn::Join:
                - ""
                -
                  - "arn:aws:s3:::"
                  -
                    Ref: BucketName
                  - "/*"
            Principal: "*"
            Condition:
              Bool:
                aws:SecureTransport: false